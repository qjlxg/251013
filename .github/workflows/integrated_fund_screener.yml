name: 2-Extract and Save Fund Holdings and Analysis

# -----------------------------------------------------------
# 修改点 1: 限制触发条件 - 只有指定文件改动时才运行
# -----------------------------------------------------------
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/integrated_fund_screener.yml'
      # 确保您的脚本名称是 integrated_fund_screener.py
      - 'integrated_fund_screener.py'
  
  # -----------------------------------------------------------
  # 修改点 2: 设置定时运行 - 每 3 小时运行一次
  # -----------------------------------------------------------
  schedule:
    # '0 */3 * * *' 表示每隔 3 小时的第 0 分钟运行一次 (如 00:00, 03:00, 06:00 等)
    - cron: '0 */3 * * *'
  
  workflow_dispatch:

jobs:
  extract-data:
    # -----------------------------------------------------------
    # 修改点 3: 设置时区环境变量为 Asia/Shanghai (上海时间)
    # -----------------------------------------------------------
    env:
      TZ: Asia/Shanghai
      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          # --- 核心修改：新增 aiohttp, tqdm, lxml (用于BeautifulSoup), akshare, openpyxl ---
          pip install pandas requests beautifulsoup4 numpy akshare openpyxl
          pip install aiohttp tqdm
          # 原有的非必要/未使用的库已移除，如果您的脚本中确实使用了 yfinance/selenium/webdriver-manager/playwright，请添加回来
          # 针对同步IO操作，仍需安装 lxml (BeautifulSoup依赖)
          pip install lxml

      - name: Install ChromeDriver
        # 由于新脚本中主要依赖异步请求而非Selenium/Playwright，此步骤可能不再必要，但为保持原有功能完整性，暂时保留。
        # 如果您的脚本后续不需要WebDriver，可以删除此步骤。
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-chromedriver

      - name: Run the data extraction and analysis script
        # 运行您核心的筛选脚本
        run: python integrated_fund_screener.py

      - name: Commit and push the new data and analysis files
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 脚本运行过程中会在 'data/' 目录下生成大量临时文件，最好不要全部提交。
          # 推荐在 .gitignore 中忽略 'data/' 目录。
          # 此外，日志文件 fund_screener.log 也应该被提交。
          
          files=(
            "fund_holdings.json"
            "fund_analysis.json"
            "fund_basic_info.xlsx"
            "fund_basic_info.csv"
            "all_fund_codes.csv"
            "risk_metrics.json"
            "fund_managers_data/fund_managers_*.json"
            "fund_codes.csv"
            "fund_rankings.csv"
            "selected_funds.csv"
            "valuation_*.json"
            "manager_index_screened_funds.csv"
            "recommended_cn_funds.csv"
            "filtered_funds.csv"
            "merged_funds.csv"
            "fund_screener.log"  # 新增：提交日志文件
            "failed_funds.txt"   # 新增：提交失败基金列表
          )
          
          for file in "${files[@]}"; do
            if ls $file 2>/dev/null; then
              git add $file
              # 使用 || true 避免在没有实际提交时因错误退出
              git commit -m "Automated: Update $file" || true
            else
              echo "未找到 $file"
            fi
          done
          # 仅在有新的文件被添加或修改时才执行 push
          if git diff --cached --exit-code; then
            echo "没有新的数据文件需要推送。"
          else
            git push
            echo "已成功推送新的数据文件。"
          fi
